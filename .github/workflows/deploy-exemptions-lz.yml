# This pipeline is used to plan exemptions in a pull request
name: Landing Zone Exemptions

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    types:
      - closed
    paths:
      - "Definitions/policyExemptions/**"
      - ".github/workflows/**"

env:
  PAC_OUTPUT_FOLDER: ./Output
  PAC_DEFINITIONS_FOLDER: ./Definitions

permissions:
  contents: read
  id-token: write

# Exemptions can only apply where there are actual resources.
# So there is no need to run for the Development environments as any
# configured deployment will not happen as the resources do not exist.
jobs:
  get_artifact:
    name: Get Policy Plan Artifact
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    outputs:
      planRunId: ${{ steps.getPlan.outputs.result }}
    steps:
      - name: Get Latest Plan Run
        uses: actions/github-script@v7
        id: getPlan
        with:
          script: |
            # Get the latest workflow run for the policy plan
            # for the branch that was merged.
            # This will be used to get the artifact details.
            const runs = (await github.rest.actions.listWorkflowRuns({
              owner : context.repo.owner,
              repo : context.repo.repo,
              workflow_id: 'pr-exemptions-sec.yml',
              branch: context.head_ref,
            })).data.workflow_runs;

            if (runs.length < 1) {
              core.setFailed('No runs found');
            }

            if runs.length > 1 {
              core.setFailed('Multiple runs found');
            }

            if runs[0].status !== 'success' {
              core.setFailed('Latest run is not completed successfully');
            }

            return runs.id;

  exemptions:
    name: Deploy
    uses: ./.github/workflows/tpl-plan-exemptions-only.yml
    with:
      pacEnvironmentSelector: Security-Prod
    secrets: inherit
